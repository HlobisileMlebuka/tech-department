<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Formative-assessments on Documentation for Umuzi Tech Department</title>
    <link>/formative-assessments/</link>
    <description>Recent content in Formative-assessments on Documentation for Umuzi Tech Department</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/formative-assessments/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/formative-assessments/tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/formative-assessments/tdd/</guid>
      <description>Formative Assessment 16 Test-driven development (115359 &amp;amp; 115384)
Readings: https://docs.python.org/3/library/unittest.html https://docs.python-guide.org/writing/tests/ https://jeffknupp.com/blog/2013/12/09/improve-your-python-understanding-unit-testing/
Video: https://www.youtube.com/watch?v=6tNS--WetLI
Data Assignment:
Write a script called factorial.py that takes a number and returns its factorial.
Steps: Think about which tests you want to do on that function. Write the tests first. Test an empty function called factorial - it should fail the tests Add code for returning the factorial of a number - it should pass for numbers &amp;gt;= 1 Add code for dealing with zero - should pass unit test for zero and for numbers &amp;gt;= 1 Add code for dealing with negative numbers Add code for dealing with non-numeric input</description>
    </item>
    
  </channel>
</rss>